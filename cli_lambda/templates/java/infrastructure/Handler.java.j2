package com.{{ package_name }}.infrastructure;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.{{ package_name }}.application.usecase.HelloUseCase;
import com.{{ package_name }}.domain.dto.InputDto;
import com.{{ package_name }}.domain.dto.OutputDto;
import com.{{ package_name }}.domain.dto.ResponseEntity;
import com.{{ package_name }}.domain.dto.StatusCode;

/**
 * Manejador principal de la función Lambda.
 * 
 * InputDto representa los datos recibidos.
 * OutputDto representa la estructura de salida.
 * ResponseEntity encapsula el código de estado HTTP y el cuerpo de la respuesta.
 */
public class Handler implements RequestHandler<InputDto, ResponseEntity<OutputDto>> {

    private final HelloUseCase helloUseCase = new HelloUseCase();

    @Override
    public ResponseEntity<OutputDto> handleRequest(InputDto input, Context context) {
        String message = helloUseCase.getHelloMessage();

        OutputDto output = new OutputDto();
        output.setMessage(message);

        ResponseEntity<OutputDto> response = new ResponseEntity<>();
        response.setStatusCode(StatusCode.OK.getCode());
        response.setBody(output);
        return response;
    }
}