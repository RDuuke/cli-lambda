import globals from 'globals'
import pluginJs from '@eslint/js'
import tseslint from 'typescript-eslint'
import jest from 'eslint-plugin-jest'
import prettierPlugin from 'eslint-plugin-prettier'
import prettierConfig from 'eslint-config-prettier'

export default [
  // Configuración base para todos los archivos JS/TS
  {
    files: ['src/**/*.{js,mjs,cjs,ts}', 'test/**/*.{js,mjs,cjs,ts}'],
    languageOptions: {
      globals: {
        ...globals.node,
      },
    },
    rules: {
      'no-console': 'warn',
      'no-debugger': 'error',
      'max-len': ['error', { code: 120, ignoreComments: true, ignoreUrls: true }],
      'object-curly-spacing': ['error', 'always'],
    },
  },

  // Configuración específica para archivos JavaScript
  {
    files: ['**/*.js'],
    languageOptions: {
      sourceType: 'commonjs',
    },
  },

  // Configuración para TypeScript
  ...tseslint.configs.recommended,
  {
    files: ['src/**/*.{ts}'],
    rules: {
      '@typescript-eslint/no-require-imports': 'off',
      '@typescript-eslint/semi': ['error', 'always'],
      '@typescript-eslint/indent': ['error', 4],
      '@typescript-eslint/quotes': ['error', 'single'],
      '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
    },
  },

  // Configuración para Jest (pruebas)
  {
    files: ['test/**/*.{js,mjs,cjs,ts}'],
    ...jest.configs['flat/recommended'],
    languageOptions: {
      globals: {
        ...globals.jest,
      },
    },
    rules: {
      ...jest.configs['flat/recommended'].rules,
      'jest/prefer-expect-assertions': 'off',
    },
  },

  // Integración con Prettier
  {
    plugins: {
      prettier: prettierPlugin,
    },
    rules: {
      'prettier/prettier': 'error',
    },
  },
  prettierConfig,

  // Ignorar archivos y directorios
  {
    ignores: [
      'test/',
      'dist/',
      'coverage/',
      'node_modules/',
      'esbuild.config.ts',
      'setup-jest.ts',
      'tsconfig.json',
      'tsconfig.eslint.json',
    ],
  },
];
